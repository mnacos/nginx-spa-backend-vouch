user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;

    keepalive_timeout  65;
    gzip  on;
    gzip_types text/plain text/css application/javascript application/json;

    # Security headers
    add_header X-Content-Type-Options "nosniff";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Static files (HTML, JavaScript, CSS, etc.)
        location / {
            try_files $uri $uri/ /index.html;
            expires 1d;
        }

        # API proxy for service1
        location /api/service1/ {
            proxy_pass ${SERVICE1_API_URL};
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Authentication headers from environment variables
            proxy_set_header Authorization "Bearer ${SERVICE1_API_KEY}";
            proxy_set_header X-API-Token "${SERVICE1_API_TOKEN}";
        }

        # API proxy for service2
        location /api/service2/ {
            # Remove /api/service2 prefix when proxying
            rewrite ^/api/service2/(.*)$ /$1 break;
            
            proxy_pass ${SERVICE2_API_URL};
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Authentication headers from environment variables
            proxy_set_header Authorization "Bearer ${SERVICE2_API_KEY}";
            proxy_set_header Custom-Auth-Header "${SERVICE2_CUSTOM_AUTH}";
        }

        # Error handling
        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}
